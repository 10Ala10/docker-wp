version: '3.9'

services:
  db:
    container_name: "wp-mysql"
    image: mariadb:10
    volumes:
      - database:/var/lib/mysql
      - ${PWD}/dump:/docker-entrypoint-initdb.d
    restart: unless-stopped
    environment: # the mysql user is 'root'
      MYSQL_ROOT_PASSWORD: pass
      MYSQL_DATABASE: wp_wordpress
      MYSQL_USER: wp_user
      MYSQL_PASSWORD: wp_pass

  phpmyadmin:
    container_name: "php-my-admin"
    depends_on:
      - "db"
    image: phpmyadmin/phpmyadmin:4.9
    ports: 
      - "8081:80"
    environment:
      PMA_HOST: db

  wordpress:
    container_name: "wp-site"
    depends_on:
      - "db"
    args:
      user_id: $(id -u)
    image: fsg/wordpress
    build:
      context: .
      dockerfile: Dockerfile.website
    volumes:
      - wordpress:/var/www/html
      - ${THEMES_DIR:-./wp-content/themes}:/var/www/html/wp-content/themes
      - ${PLUGINS_DIR:-./wp-content/plugins}:/var/www/html/wp-content/plugins
      - ${UPLOADS_DIR:-./wp-content/uploads}:/var/www/html/wp-content/uploads
    ports:
      - "8000:80"
    restart: unless-stopped
    environment:
      WP_ENV: "local"
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: wp_user
      WORDPRESS_DB_PASSWORD: wp_pass
      WORDPRESS_DB_NAME: wp_wordpress

#  cli:
#    container_name: wp-cli
#    image: wordpress:cli-php7.4
#    depends_on: [ "wordpress" ]
#    volumes_from: [ "wordpress" ]
#    links: [ "db:mysql" ]
#    user: xfs # if using default wordpress images | it's 33:33
#    #user: "1000:33" # if you use Dockerfile.website | matches www-data uid=1000
#    environment:
#      WORDPRESS_DB_USER: wp_user
#      WORDPRESS_DB_PASSWORD: wp_pass
#      WORDPRESS_DB_NAME: wp_wordpress

volumes:
    database:
    wordpress:
    #  name: "wp_layer"